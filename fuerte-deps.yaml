ADEPT_VIPER_S650_arm_navigation: [planning_environment, arm_kinematics_constraint_aware,
  ompl_ros_interface, trajectory_filter_server, constraint_aware_spline_smoother,
  move_arm]
ADEPT_VIPER_S650_ikfast_arm_navigation: [kinematics_base, planning_environment, arm_kinematics_constraint_aware,
  ompl_ros_interface, trajectory_filter_server, constraint_aware_spline_smoother,
  move_arm]
ackermann_msgs: [std_msgs]
actionlib: [roscpp, rospy, rostest, actionlib_msgs]
actionlib_tutorials: [roscpp, rospy, roslib, std_msgs, rosconsole, actionlib, actionlib_msgs]
adept: [arm_navigation, common, common_msgs, control, robot_model, ros, ros_comm,
  industrial]
adept_common: [std_msgs, roscpp, actionlib, trajectory_msgs, actionlib_msgs, control_msgs,
  sensor_msgs, simple_message, urdf]
amcl: [roscpp, rosbag, tf, message_filters, nav_msgs, std_srvs, dynamic_reconfigure,
  map_server, rostest]
app_manager: [rospy, roslaunch, rosgraph, rosunit]
app_manager_android: [pyqrnative, roslib]
app_manager_tutorial: [rospy, app_manager]
ar_track_alvar: [std_msgs, rospy, roscpp, tf, image_transport, sensor_msgs, geometry_msgs,
  visualization_msgs, resource_retriever, cv_bridge, pcl_ros]
audio_capture: [roscpp, audio_common_msgs, libgstreamer0.10-dev, libgstreamer-plugins-base0.10-dev,
  python-gst, gstreamer0.10-plugins-ugly, gstreamer0.10-plugins-good]
audio_common: [ros, common, common_msgs, common_rosdeps, ros_comm]
audio_play: [roscpp, audio_common_msgs, libgstreamer0.10-dev, libgstreamer-plugins-base0.10-dev,
  python-gst, gstreamer0.10-plugins-ugly, gstreamer0.10-plugins-good]
base_local_planner: [std_msgs, nav_msgs, rosconsole, roscpp, tf, roslib, rospy, pluginlib,
  costmap_2d, voxel_grid, angles, visualization_msgs, geometry_msgs, nav_core, pcl_ros,
  common_rosdeps, pcl, eigen]
bfl: [cppunit]
bond: [roslib]
bond_core: [ros, ros_comm]
bondcpp: [bond, roscpp, smclib, uuid]
bondpy: [bond, rospy, smclib]
brown_drivers: [common_msgs, geometry, ros, ros_comm]
calibration: [common, common_msgs, geometry, image_common, image_pipeline, perception_pcl,
  ros, ros_comm, vision_opencv]
calibration_estimation: [rospy, rostest, sensor_msgs, calibration_msgs, visualization_msgs,
  tf, python-scipy]
calibration_launch: [topic_tools, image_cb_detector, laser_cb_detector, image_view,
  message_filters, sensor_msgs, monocam_settler, joint_states_settler, interval_intersection,
  calibration_msgs, sensor_msgs, geometry_msgs, trajectory_msgs, rospy, std_msgs]
calibration_msgs: [geometry_msgs, sensor_msgs]
camera1394: [camera_info_manager, diagnostic_updater, driver_base, dynamic_reconfigure,
  image_transport, nodelet, tf, libdc1394-dev]
camera_drivers: [camera1394, prosilica_driver, wge100_driver]
carrot_planner: [roscpp, costmap_2d, pluginlib, nav_core, base_local_planner, tf,
  angles, common_rosdeps, eigen]
cereal_port: [roscpp]
clear_costmap_recovery: [roscpp, tf, costmap_2d, nav_core, pluginlib, common_rosdeps,
  eigen]
clearpath_base: [rospy, std_msgs, geometry_msgs, python-serial, pkg-config]
clearpath_bringup: [rospy, std_msgs, daemontools]
clearpath_common: [common_msgs, joystick_drivers, ros, ros_comm]
clearpath_kinect: [common_msgs, perception_pcl, ros, ros_comm]
clearpath_kinect_demo: [roscpp, pcl_ros, clearpath_tools]
clearpath_teleop: [rospy, sensor_msgs, geometry_msgs, std_msgs]
clearpath_tools: [roscpp, pcl_ros, std_msgs, sensor_msgs]
clearpath_turtlebot: [clearpath_kinect, openni_kinect, ros, turtlebot]
cob_extern: [ros]
common: [actionlib, pluginlib, ros, ros_comm]
common_rosdeps: [ros]
common_tutorials: [actionlib, common_msgs, geometry, nodelet_core, pluginlib, ros,
  ros_comm, ros_tutorials]
control: [common_msgs, ros, ros_comm]
control_msgs: [actionlib_msgs, geometry_msgs, trajectory_msgs, rospy]
costmap_2d: [rosconsole, roscpp, std_msgs, geometry_msgs, sensor_msgs, laser_geometry,
  tf, voxel_grid, nav_msgs, visualization_msgs, rosbag, map_server, pcl_ros, dynamic_reconfigure,
  common_rosdeps, pcl, eigen]
database_interface: [roscpp, common_rosdeps, libpq-dev, yaml-cpp]
diagnostics_monitors: [common_msgs, ros, ros_comm, rx]
driver_base: [roscpp, self_test, diagnostic_updater, dynamic_reconfigure]
driver_common: [diagnostics, ros, dynamic_reconfigure]
dwa_local_planner: [roscpp, tf, costmap_2d, roslib, nav_core, nav_msgs, base_local_planner,
  angles, dynamic_reconfigure, common_rosdeps, eigen]
dynamic_reconfigure: [rospy, roscpp, rosservice, wxpython]
eigen_conversions: [geometry_msgs, kdl, tf, eigen]
ethzasl_xsens_driver: [common_msgs, geometry, gps_umd, ros, ros_comm]
executive_smach: [actionlib, common_msgs, ros, ros_comm]
executive_smach_visualization: [executive_smach, ros, ros_comm, rx]
fake_localization: [roscpp, rosconsole, nav_msgs, geometry_msgs, tf, message_filters,
  angles]
filters: [rosconsole, roscpp, pluginlib]
foreign_relay: [roscpp, xmlrpcpp, topic_tools]
geometry: [bullet, common_msgs, ros, ros_comm, orocos_kinematics_dynamics, common_rosdeps]
geometry_experimental: [common, common_msgs, geometry, ros, ros_comm]
geometry_tutorials: [geometry, ros, ros_comm, ros_tutorials]
geometry_visualization: [geometry_experimental, ros, ros_comm, rx]
gmapping: [roscpp, rosbag, rosconsole, std_msgs, nav_msgs, std_msgs, tf, message_filters,
  map_server]
gps_common: [roscpp, message_filters, nav_msgs, sensor_msgs]
gps_drivers: [ros, nmea_gps_driver]
gps_umd: [common_msgs, ros, ros_comm]
gpsd_client: [roscpp, sensor_msgs, gps_common, libgps]
halfsteps_pattern_generator: [common_rosdeps, rospy, bullet, walk_interfaces, walk_msgs,
  visualization_msgs, angles, boost, eigen]
humanoid_walk: [bullet, common_msgs, common_rosdeps, diagnostics, geometry, ros, ros_comm,
  robot_model_py]
image_cb_detector: [calibration_msgs, roscpp, cv_bridge, actionlib, actionlib_msgs,
  image_transport, sensor_msgs, geometry_msgs, pcl_ros, opencv2]
imu_drivers: [common_msgs, diagnostics, geometry, ros, ros_comm]
interval_intersection: [roscpp, actionlib_msgs, actionlib, calibration_msgs]
irobot_create_2_1: [roscpp, rospy, geometry_msgs, tf, nav_msgs, python-serial]
joint_state_publisher: [rospy, sensor_msgs, wxpython]
joint_states_settler: [roscpp, actionlib_msgs, sensor_msgs, actionlib, settlerlib,
  calibration_msgs]
kingfisher: [camera_drivers, image_pipeline, image_transport_plugins, multimaster_experimental,
  ros, ros_comm, rosserial]
kingfisher_bringup: [kingfisher_msgs, rosserial_python, app_manager, camera1394, image_proc,
  compressed_image_transport]
kingfisher_node: [rospy, rosserial_python, kingfisher_msgs, std_msgs]
laser_assembler: [roscpp, std_msgs, geometry_msgs, laser_geometry, laser_filters,
  sensor_msgs, tf]
laser_cb_detector: [roscpp, message_filters, std_msgs, actionlib_msgs, calibration_msgs,
  image_cb_detector, opencv2, cv_bridge]
laser_filters: [sensor_msgs, roscpp, tf, filters, message_filters, laser_geometry,
  pluginlib, pcl_ros]
laser_geometry: [sensor_msgs, roscpp, tf, angles, common_rosdeps, eigen]
laser_pipeline: [common_msgs, common_rosdeps, filters, geometry, perception_pcl, pluginlib,
  ros, ros_comm]
laser_scan_publisher_tutorial: [roscpp, sensor_msgs]
libpcan: [linux-headers-generic, libpopt-dev]
libphidgets: [libusb-dev]
map_server: [rosconsole, roscpp, rospy, nav_msgs, tf, common_rosdeps, python-imaging,
  python-yaml, yaml-cpp, sdl-image]
megatree_pcl: [pcl_ros, megatree_storage, megatree_cpp]
microstrain_3dmgx2_imu: [roscpp, sensor_msgs, self_test, diagnostic_updater, tf, std_srvs]
monocam_settler: [roscpp, actionlib, actionlib_msgs, settlerlib, calibration_msgs]
move_base: [roscpp, rosconsole, std_msgs, move_base_msgs, geometry_msgs, visualization_msgs,
  actionlib, nav_core, pluginlib, costmap_2d, tf, nav_msgs, roslib, rospy, rosmsg,
  rostopic, std_srvs, dynamic_reconfigure, common_rosdeps, base_local_planner, navfn,
  clear_costmap_recovery, rotate_recovery, eigen]
move_base_msgs: [roslib, std_msgs, actionlib_msgs, geometry_msgs]
move_slow_and_clear: [roscpp, nav_core, costmap_2d, geometry_msgs, pluginlib, dynamic_reconfigure,
  common_rosdeps, eigen]
multimaster_experimental: [ros, ros_comm]
nav_core: [std_msgs, geometry_msgs, costmap_2d, tf]
nav_msgs: [geometry_msgs]
navfn: [rosconsole, roscpp, geometry_msgs, costmap_2d, nav_core, pluginlib, nav_msgs,
  tf, visualization_msgs, pcl_ros, common_rosdeps, eigen, fltk, netpbm]
navigation: [actionlib, bfl, common_msgs, common_rosdeps, dynamic_reconfigure, geometry,
  laser_pipeline, perception_pcl, pluginlib, ros, ros_comm]
navigation_stage: [move_base, stage, amcl, map_server, fake_localization, gmapping]
navigation_tutorials: [common, common_msgs, geometry, navigation, ros, ros_comm, slam_gmapping,
  stage]
nmea_gps_driver: [sensor_msgs, std_msgs, rospy, geometry_msgs, python-serial]
nodelet: [pluginlib, roscpp, rospy, bondcpp, uuid]
nodelet_core: [bond_core, dynamic_reconfigure, pluginlib, ros, ros_comm]
nodelet_topic_tools: [nodelet, roscpp, message_filters, dynamic_reconfigure, rospy,
  std_msgs]
nodelet_tutorial_math: [nodelet, roscpp, std_msgs]
occupancy_grid_utils: [nav_msgs, geometry_msgs, tf, sensor_msgs, roscpp, laser_geometry,
  bullet, rospy, map_server]
odometry_publisher_tutorial: [roscpp, nav_msgs, tf]
open_street_map: [common_msgs, driver_common, geographic_info, geometry, ros, ros_comm]
openni_launch: [depth_image_proc, image_proc, nodelet, openni_camera, tf]
openni_tracker: [geometry_msgs, kdl, roscpp, roslib, tf, openni-dev, nite-dev, ps-engine]
openrtm_cpp: [pkg-config, uuid, omniorb, python-yaml, doxygen]
osm_cartography: [dynamic_reconfigure, geodesy, geographic_msgs, geometry_msgs, rospy,
  tf, std_msgs, visualization_msgs]
pluginlib_tutorials: [pluginlib, roscpp]
point_cloud_publisher_tutorial: [roscpp, sensor_msgs]
pr2_make_a_map_app: [pr2_position_scripts, gmapping, tf, mongodb, topic_tools, map_store]
pr2_pan_tilt: [geometry_msgs, pr2_controllers_msgs, topic_tools, actionlib, rospy,
  tf]
pr2_tabletop_manipulation_apps: [ros]
pr2_tuck_arms_app: [rospy, trajectory_msgs, pr2_mechanism_msgs, pr2_tuck_arms_action]
pyqrnative: [python-imaging]
rbdl: [urdf, urdf_interface, eigen, libunittest++]
robot_model_py: [ros, ros_comm]
robot_model_tutorials: [ros]
robot_model_visualization: [common_msgs, ros, ros_comm]
robot_monitor: [rospy, diagnostic_msgs, rxbag, wxwidgets, wxpython]
robot_pose_ekf: [roscpp, rosbag, bfl, std_msgs, geometry_msgs, sensor_msgs, nav_msgs,
  tf]
robot_pose_publisher: [roscpp, tf, geometry_msgs]
robot_setup_tf_tutorial: [roscpp, tf, geometry_msgs]
romeo: [ros]
rosbag: [python-imaging, bzip2]
rosconsole: [apr, log4cxx]
roscpp: [roslang, pkg-config]
roscpp_tutorials: [roscpp, std_srvs, std_msgs]
rosh_common: [rospy, rosmsg, rostopic, roslib, rosh, actionlib, std_msgs, sensor_msgs,
  nav_msgs]
rosh_desktop: [rosh, rosh_robot, rosh_visualization]
rosh_desktop_plugins: [ros, rosh_robot_plugins, visualization]
rosh_geometry: [roslib, rospy, tf, geometry_msgs, rosh]
rosh_robot: [rosh, rosh_common, rosh_geometry]
rosh_robot_plugins: [common, common_msgs, geometry, ros, ros_comm, rosh_core]
rosh_visualization: [roslib, rosh, rviz]
rosjs: [ros]
roslaunch: [python-paramiko, python-yaml]
roslib: [python, boost]
roslisp: [roslang]
rosparam: [python-yaml]
rosproxy: [rospy, rosgraph, roslib, rosservice, rostopic]
rospy: [roslang]
rosserial_adk_demo: [rosserial_arduino, std_msgs, sensor_msgs, geometry_msgs, rosserial_adk_demo_msgs]
rosserial_android: [rosjava, rosserial_java, std_msgs, sensor_msgs, nav_msgs, rosserial_msgs,
  android]
rosserial_java: [rosjava, rosserial_msgs]
rosserial_java_node: [rosserial_java]
rosunit: [gtest]
roswtf: [python-paramiko]
rotate_recovery: [roscpp, nav_core, tf, costmap_2d, geometry_msgs, base_local_planner,
  pluginlib, angles, common_rosdeps, eigen]
route_network: [dynamic_reconfigure, geodesy, geographic_msgs, geometry_msgs, nav_msgs,
  rospy, visualization_msgs]
runtime_monitor: [rospy, diagnostic_msgs, rxbag, wxwidgets, wxpython]
rxbag: [rospy, roslib, std_msgs, rosbag, rosgraph, rxtools, python-gtk2, wxpython]
rxgraph: [rosgraph, xdot, rostopic, rosnode]
rxtools: [roscpp, rosgraph_msgs, roslib, rospy, wxPython_swig_interface, wxwidgets,
  swig-wx, python-gtk2, python-matplotlib, wxpython]
sensor_msgs: [geometry_msgs]
serial_communication: [ros, ros_comm]
settlerlib: [roscpp, calibration_msgs]
shape_msgs: [std_msgs, geometry_msgs]
simple_navigation_goals_tutorial: [move_base_msgs, actionlib, roscpp, tf]
simple_object_capture: [pcl, roscpp, sensor_msgs, message_filters, dynamic_reconfigure,
  opencv2, cv_bridge, rosbag, image_geometry]
slam_gmapping: [common_msgs, geometry, navigation, ros, ros_comm]
smach_ros: [smach, rospy, rostest, rostopic, actionlib, actionlib_msgs, smach_msgs,
  std_msgs, std_srvs]
smach_viewer: [smach_ros, xdot, smach_msgs]
sound_play: [rospy, roscpp, roslib, diagnostic_msgs, festival, libgstreamer0.10-dev,
  libgstreamer-plugins-base0.10-dev, python-gst, gstreamer0.10-plugins-ugly, gstreamer0.10-plugins-good]
sql_database: [common_rosdeps, ros, ros_comm]
srs_common: [arm_navigation, common_msgs, perception_pcl, ros, ros_comm]
srs_object_database_msgs: [pcl, visualization_msgs, sensor_msgs, arm_navigation_msgs]
stereo_msgs: [sensor_msgs]
student_database: [database_interface]
test_bond: [rostest, bond, bondpy, bondcpp]
test_nodelet: [nodelet, std_msgs, rostest, pluginlib]
test_osm: [osm_cartography, route_network, geodesy, geographic_msgs]
test_rospy: [python-numpy]
test_tf2: [rostest, tf, tf2, tf2_bullet, tf2_ros, tf2_geometry_msgs, tf2_kdl, tf2_msgs,
  roscpp, roslib]
tf: [bullet, geometry_msgs, sensor_msgs, roscpp, rosconsole, angles, rospy, rostest,
  roswtf, message_filters, python-numpy, graphviz]
tf2: [geometry_msgs, tf2_msgs, rospy, roscpp]
tf2_bullet: [tf2_ros, bullet, geometry_msgs]
tf2_geometry_msgs: [geometry_msgs, tf2_ros, kdl]
tf2_kdl: [tf2_ros, kdl, geometry_msgs]
tf2_msgs: [geometry_msgs, actionlib_msgs]
tf2_ros: [tf2, tf2_msgs, roscpp, rospy, geometry_msgs, actionlib, actionlib_msgs,
  rosgraph]
tf2_tools: [tf2_msgs, tf2, tf2_ros]
tf2_visualization: [tf2_msgs, tf2, tf2_ros, xdot, rxbag]
tf_conversions: [tf, kdl, geometry_msgs, eigen]
timestamp_tools: [roslib, roscpp]
turtle_actionlib: [roscpp, std_msgs, rosconsole, actionlib, actionlib_msgs, turtlesim,
  angles]
turtle_tf: [roscpp, rospy, turtlesim, tf]
turtlebot_kinect: [openni_camera, clearpath_tools, clearpath_kinect_demo]
turtlebot_rndmwalk: [clearpath_tools, clearpath_kinect_demo, turtlebot_node]
turtlebot_train: [clearpath_tools, clearpath_kinect_demo, turtlebot_node]
turtlesim: [libqt4-dev, qt4-qmake]
unique_id: [roscpp, rospy, rosunit, uuid_msgs]
unique_identifier: [ros, ros_comm]
urdf_parser_py: [rospy]
visualization_msgs: [geometry_msgs, std_msgs]
voxel_grid: [rosconsole]
walk_interfaces: [common_rosdeps, boost, eigen, yaml-cpp]
walk_msgs: [roscpp, rospy, common_rosdeps, bullet, geometry_msgs, nav_msgs, walk_interfaces,
  visualization_msgs, angles, boost, eigen]
walk_tools: [rospy, geometry_msgs, sensor_msgs, message_filters, diagnostic_aggregator,
  diagnostic_updater, urdf_parser_py]
wg_pr2_2dnav: [willow_maps, map_server, pr2_navigation_global, pr2_navigation_perception,
  pr2_navigation_teleop, pr2_machine]
wg_pr2_apps: [navigation, pr2_common, pr2_navigation, ros, wg_common]
wge100_camera: [rostest, roscpp, rospy, std_msgs, sensor_msgs, diagnostic_updater,
  driver_base, self_test, dynamic_reconfigure, camera_calibration_parsers, timestamp_tools,
  image_transport]
wge100_camera_firmware: [rostest, rospy, gforth]
wge100_driver: [common_msgs, diagnostics, driver_common, dynamic_reconfigure, image_common,
  ros, ros_comm]
wxPython_swig_interface: [wxpython]
xacro: [rostest, rosbuild]
xdot: [wxpython, graphviz]
xsens_driver: [rospy, tf, std_msgs, sensor_msgs, geometry_msgs, gps_common, diagnostic_msgs]
