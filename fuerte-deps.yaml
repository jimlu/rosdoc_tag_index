ADEPT_VIPER_S650_arm_navigation: [planning_environment, arm_kinematics_constraint_aware,
  ompl_ros_interface, trajectory_filter_server, constraint_aware_spline_smoother,
  move_arm]
ADEPT_VIPER_S650_ikfast_arm_navigation: [kinematics_base, planning_environment, arm_kinematics_constraint_aware,
  ompl_ros_interface, trajectory_filter_server, constraint_aware_spline_smoother,
  move_arm]
ackermann_msgs: [std_msgs]
actionlib: [actionlib_msgs, rostest, rospy, roscpp]
actionlib_tutorials: [roscpp, rospy, roslib, std_msgs, rosconsole, actionlib, actionlib_msgs]
active_realtime_segmentation: [sensor_msgs, roscpp, stereo_msgs]
adept: [arm_navigation, common, common_msgs, control, robot_model, ros, ros_comm,
  industrial]
adept_common: [std_msgs, roscpp, actionlib, trajectory_msgs, actionlib_msgs, control_msgs,
  sensor_msgs, simple_message, urdf]
amcl: [roscpp, rosbag, tf, message_filters, nav_msgs, std_srvs, dynamic_reconfigure,
  map_server, rostest]
app_manager: [rospy, roslaunch, rosgraph, rosunit]
app_manager_android: [pyqrnative, roslib]
app_manager_tutorial: [rospy, app_manager]
ar_track_alvar: [std_msgs, rospy, roscpp, tf, image_transport, sensor_msgs, geometry_msgs,
  visualization_msgs, resource_retriever, cv_bridge, pcl_ros]
arm_kinematics_constraint_aware: [kinematics_base, arm_navigation_msgs, kinematics_msgs,
  kdl, roscpp, tf, sensor_msgs, tf_conversions, kdl_parser, pluginlib, planning_environment,
  planning_models]
arm_navigation: [actionlib, bullet, common_msgs, control, filters, geometry, orocos_kinematics_dynamics,
  perception_pcl, physics_ode, pluginlib, robot_model, ros, ros_comm, visualization]
arm_navigation_experimental: [actionlib, arm_navigation, bullet, common_msgs, common_rosdeps,
  control, filters, geometry, image_common, octomap_mapping, orocos_kinematics_dynamics,
  perception_pcl, pluginlib, pr2_controllers, pr2_mechanism, robot_model, ros, ros_comm,
  vision_opencv, visualization, warehousewg]
arm_navigation_experimental_tools: [planning_environment]
arm_navigation_msgs: [std_msgs, actionlib_msgs, sensor_msgs, geometry_msgs, trajectory_msgs,
  tf]
arm_navigation_tests: [pr2_controller_manager, pr2_arm_navigation_filtering, pr2_arm_kinematics,
  move_arm, single_joint_position_action, image_proc, planning_environment, pr2_arm_navigation_planning,
  rostopic, collision_map, pr2_arm_navigation_kinematics, gazebo, pr2_description,
  diagnostic_aggregator, robot_state_publisher, joint_trajectory_action, gazebo_tools,
  pr2_gripper_action, pr2_head_action, pr2_gazebo, pr2_arm_navigation_perception,
  pr2_arm_navigation_actions, pr2_arm_kinematics_constraint_aware]
assimp: [assimp]
assisted_teleop: [tf, costmap_2d, roscpp, roslib, geometry_msgs, move_base_msgs, actionlib,
  message_filters, base_local_planner, angles, pluginlib, sensor_msgs, filters, eigen]
audio_capture: [roscpp, libgstreamer-plugins-base0.10-dev, gstreamer0.10-plugins-good,
  libgstreamer0.10-dev, python-gst, gstreamer0.10-plugins-ugly, audio_common_msgs]
audio_common: [ros, common, common_msgs, common_rosdeps, ros_comm]
audio_play: [roscpp, libgstreamer-plugins-base0.10-dev, gstreamer0.10-plugins-good,
  libgstreamer0.10-dev, python-gst, gstreamer0.10-plugins-ugly, audio_common_msgs]
bag_tools: [message_filters, cv_bridge, sensor_msgs, rospy, stereo_image_proc, rosbag]
base_local_planner: [std_msgs, nav_msgs, rosconsole, roscpp, tf, roslib, rospy, pluginlib,
  costmap_2d, voxel_grid, angles, visualization_msgs, geometry_msgs, nav_core, pcl_ros,
  common_rosdeps, pcl, eigen]
bfl: [cppunit]
bfl_eigen: [eigen]
biorob_common: [ros, xacro, robot_model, pr2_simulator]
biorob_description: [urdf, xacro]
biorob_gazebo: [gazebo_tools, gazebo, pr2_gazebo_plugins, biorob_description]
bond: [roslib]
bond_core: [ros, ros_comm]
bondcpp: [uuid, smclib, roscpp, bond]
bondpy: [smclib, rospy, bond]
brown_drivers: [common_msgs, geometry, ros, ros_comm]
bullet: [glut, libxext]
calibration: [common, common_msgs, geometry, image_common, image_pipeline, perception_pcl,
  ros, ros_comm, vision_opencv]
calibration_estimation: [sensor_msgs, python-scipy, rostest, rospy, calibration_msgs,
  visualization_msgs, tf]
calibration_launch: [laser_cb_detector, message_filters, image_view, monocam_settler,
  trajectory_msgs, sensor_msgs, interval_intersection, topic_tools, geometry_msgs,
  joint_states_settler, std_msgs, rospy, image_cb_detector, calibration_msgs]
calibration_msgs: [sensor_msgs, geometry_msgs]
camera1394: [camera_info_manager, diagnostic_updater, driver_base, dynamic_reconfigure,
  image_transport, nodelet, tf, libdc1394-dev]
camera_drivers: [camera1394, prosilica_driver, wge100_driver]
camera_pose: [common_msgs, driver_common, geometry, geometry_experimental, orocos_kinematics_dynamics,
  pr2_calibration, robot_model, ros, ros_comm, vision_opencv]
camera_pose_calibration: [kdl, opencv2, tf2_kdl, message_filters, monocam_settler,
  sensor_msgs, interval_intersection, geometry_msgs, calibration_msgs, tf2_ros, image_cb_detector,
  tf_conversions, joint_states_settler]
camera_pose_toolkits: [kdl, dynamic_reconfigure, roscpp, sensor_msgs, robot_state_publisher,
  std_msgs, kdl_parser, rospy, camera_pose_calibration, tf, geometry_msgs]
carrot_planner: [roscpp, costmap_2d, pluginlib, nav_core, base_local_planner, tf,
  angles, common_rosdeps, eigen]
cereal_port: [roscpp]
chomp_motion_planner: [roscpp, planning_models, planning_environment, arm_navigation_msgs,
  kdl, kdl_parser, angles, visualization_msgs, tf, distance_field, sensor_msgs, trajectory_msgs,
  filters, spline_smoother, collision_proximity, constraint_aware_spline_smoother,
  common_rosdeps, eigen]
clear_costmap_recovery: [roscpp, tf, costmap_2d, nav_core, pluginlib, common_rosdeps,
  eigen]
clearpath_base: [rospy, std_msgs, geometry_msgs, python-serial, pkg-config]
clearpath_bringup: [rospy, std_msgs, daemontools]
clearpath_common: [common_msgs, joystick_drivers, ros, ros_comm]
clearpath_kinect: [common_msgs, perception_pcl, ros, ros_comm]
clearpath_kinect_demo: [roscpp, pcl_ros, clearpath_tools]
clearpath_teleop: [rospy, sensor_msgs, geometry_msgs, std_msgs]
clearpath_tools: [roscpp, pcl_ros, std_msgs, sensor_msgs]
clearpath_turtlebot: [clearpath_kinect, openni_kinect, ros, turtlebot]
cob_extern: [ros]
collada_parser: [roscpp, urdf_interface, colladadom]
collada_urdf: [roscpp, urdf, colladadom, resource_retriever, angles, common_rosdeps,
  assimp]
colladadom: [libxml2, unzip, pcre]
collider: [roscpp, octomap, octomap_ros, octomap_msgs, tf, visualization_msgs, arm_navigation_msgs,
  std_msgs, std_srvs, actionlib, actionlib_msgs, pcl, pcl_ros, image_transport, image_geometry,
  robot_self_filter, planning_environment, common_rosdeps, eigen, opencv2]
collision_free_arm_trajectory_controller: [arm_navigation_msgs, planning_environment,
  trajectory_msgs, pr2_controllers_msgs, actionlib_msgs, common_rosdeps, eigen]
collision_map: [roscpp, tf, visualization_msgs, std_msgs, std_srvs, robot_self_filter,
  arm_navigation_msgs, actionlib]
collision_proximity: [distance_field, planning_models, geometric_shapes, planning_environment,
  bullet, kinematics_msgs, spline_smoother, arm_navigation_msgs]
collision_proximity_planner: [planning_environment, spline_smoother, collision_proximity,
  visualization_msgs, arm_navigation_msgs, sensor_msgs, kdl, kdl_parser, angles, pluginlib]
collision_space: [rosconsole, planning_models, geometric_shapes, opende, bullet, pkg-config]
collvoid_controller: [rospy, std_msgs, tf, geometry_msgs, std_srvs, collvoid_local_planner]
collvoid_local_planner: [roscpp, collvoid_msgs, visualization_msgs, laser_geometry,
  tf, angles, base_local_planner, pluginlib, nav_core, actionlib, move_base_msgs,
  std_srvs, dynamic_reconfigure, amcl]
collvoid_msgs: [geometry_msgs, nav_msgs]
collvoid_simple_global_planner: [roscpp, pluginlib, nav_core, costmap_2d, base_local_planner,
  tf, angles]
collvoid_stage: [stage, cocalu_local_planner]
common: [actionlib, pluginlib, ros, ros_comm]
common_rosdeps: [ros]
common_tutorials: [actionlib, common_msgs, geometry, nodelet_core, pluginlib, ros,
  ros_comm, ros_tutorials]
constraint_aware_spline_smoother: [planning_environment, spline_smoother, tf, filters,
  trajectory_msgs]
control: [common_msgs, ros, ros_comm]
control_msgs: [actionlib_msgs, geometry_msgs, trajectory_msgs, rospy]
convex_decomposition: [unzip]
costmap_2d: [rosconsole, roscpp, std_msgs, geometry_msgs, sensor_msgs, laser_geometry,
  tf, voxel_grid, nav_msgs, visualization_msgs, rosbag, map_server, pcl_ros, dynamic_reconfigure,
  common_rosdeps, pcl, eigen]
cpp_introspection: [roscpp_traits, rosconsole, rostime, roscpp_serialization, rosbuild]
database_interface: [yaml-cpp, common_rosdeps, roscpp, libpq-dev]
default_cfg_fkie: [rospy, roslib, roslaunch]
dhd32_driver: [tk_haptics_base, dhd32_wrapper, roscpp, telekyb_base]
dhd_driver: [tf, telekyb_msgs, telekyb_defines, roscpp, dhd_wrapper]
diagnostics_monitors: [common_msgs, ros, ros_comm, rx]
distance_field: [roscpp, visualization_msgs, arm_navigation_msgs, bullet]
driver_base: [roscpp, self_test, diagnostic_updater, dynamic_reconfigure]
driver_common: [diagnostics, ros, dynamic_reconfigure]
dwa_local_planner: [roscpp, tf, costmap_2d, roslib, nav_core, nav_msgs, base_local_planner,
  angles, dynamic_reconfigure, common_rosdeps, eigen]
dynamic_reconfigure: [wxpython, rosservice, rospy, roscpp]
eband_local_planner: [roscpp, pluginlib, nav_core, costmap_2d, base_local_planner,
  nav_msgs, geometry_msgs, visualization_msgs, tf, tf_conversions, angles, control_toolbox,
  actionlib, eigen, tinyxml]
eigen: [eigen]
eigen_conversions: [kdl, tf, geometry_msgs, eigen]
ethzasl_xsens_driver: [common_msgs, geometry, gps_umd, ros, ros_comm]
executive_smach: [actionlib, common_msgs, ros, ros_comm]
executive_smach_visualization: [executive_smach, ros, ros_comm, rx]
fake_localization: [roscpp, rosconsole, nav_msgs, geometry_msgs, tf, message_filters,
  angles]
falkor_ardrone: [joy, camera_info_manager, sensor_msgs, image_transport, opencv2,
  rospy, tf, ardrone_autonomy, cv_bridge]
fast_plane_detection: [roscpp, stereo_msgs, std_msgs, sensor_msgs, image_transport,
  geometry_msgs, tf, rviz]
fcl: [common_rosdeps, octomap, libccd]
filters: [rosconsole, roscpp, pluginlib]
flirtlib_features: [geometry, occupancy_grid_utils, ros, ros_comm, warehousewg, visualization]
flirtlib_ros: [std_srvs, roscpp, occupancy_grid_utils, actionlib, interactive_markers,
  sensor_msgs, move_base_msgs, tf, flirtlib, mongo_ros]
foreign_relay: [roscpp, xmlrpcpp, topic_tools]
freenect_camera: [dynamic_reconfigure, roscpp, camera_info_manager, sensor_msgs, image_transport,
  libfreenect, nodelet]
freenect_launch: [tf, image_proc, depth_image_proc, freenect_camera, nodelet]
freenect_stack: [common_msgs, dynamic_reconfigure, image_common, nodelet_core, ros_comm,
  geometry]
geometric_shapes: [bullet, rosconsole, resource_retriever, tf, assimp, pkg-config]
geometry: [bullet, common_msgs, ros, ros_comm, orocos_kinematics_dynamics, common_rosdeps]
geometry_experimental: [actionlib, bullet, common_msgs, geometry, orocos_kinematics_dynamics,
  ros, ros_comm]
geometry_tutorials: [geometry, ros, ros_comm, ros_tutorials]
geometry_visualization: [geometry_experimental, ros, ros_comm, rx]
gmapping: [roscpp, rosbag, rosconsole, std_msgs, nav_msgs, std_msgs, tf, message_filters,
  map_server]
goal_passer: [roscpp, costmap_2d, pluginlib, nav_core]
gps_common: [roscpp, message_filters, nav_msgs, sensor_msgs]
gps_drivers: [ros, nmea_gps_driver]
gps_umd: [common_msgs, ros, ros_comm]
gpsd_client: [roscpp, sensor_msgs, gps_common, libgps]
halfsteps_pattern_generator: [common_rosdeps, rospy, bullet, walk_interfaces, walk_msgs,
  visualization_msgs, angles, boost, eigen]
head_monitor_msgs: [actionlib_msgs, arm_navigation_msgs]
hector_common: [common_msgs, geometry, ros, ros_comm]
hector_compressed_map_transport: [nav_msgs, hector_map_tools, eigen, sensor_msgs,
  image_transport, opencv2, geometry_msgs, cv_bridge]
hector_gazebo: [common_msgs, driver_common, image_common, nodelet_core, perception_pcl,
  ros, ros_comm, simulator_gazebo]
hector_gazebo_plugins: [nav_msgs, std_msgs, geometry_msgs, gazebo, roscpp]
hector_gazebo_thermal_camera: [dynamic_reconfigure, nodelet, image_transport, driver_base,
  gazebo_plugins, gazebo, pcl_ros]
hector_gazebo_worlds: [hector_gazebo_plugins, gazebo]
hector_geotiff: [nav_msgs, hector_map_tools, roscpp, pluginlib, std_msgs, hector_nav_msgs,
  libqt4-dev, eigen]
hector_imu_attitude_to_tf: [tf, roscpp]
hector_interactive_marker_pose_server: [interactive_markers, geometry_msgs, roscpp,
  visualization_msgs]
hector_laserscan_to_pointcloud: [laser_geometry, roscpp]
hector_localization: [common_msgs, geometry, hector_common, nodelet_core, ros, ros_comm]
hector_map_server: [nav_msgs, tf, hector_map_tools, hector_nav_msgs, hector_marker_drawing]
hector_map_tools: [nav_msgs, eigen]
hector_mapping: [nav_msgs, laser_geometry, roscpp, message_filters, visualization_msgs,
  tf, tf_conversions, eigen]
hector_marker_drawing: [eigen, roscpp, visualization_msgs]
hector_models: [ros]
hector_nav_msgs: [nav_msgs, geometry_msgs]
hector_nist_arena_elements: [gazebo]
hector_nist_arena_worlds: [hector_nist_arena_elements]
hector_nist_arenas_gazebo: [ros]
hector_pose_estimation: [nav_msgs, message_filters, sensor_msgs, geometry_msgs, hector_pose_estimation_core,
  tf, nodelet]
hector_pose_estimation_core: [bfl_eigen, nav_msgs, roscpp, sensor_msgs, geometry_msgs,
  tf, eigen]
hector_pose_estimation_rtt: [rtt_nav_msgs, rtt_geometry_msgs, rtt_rosnode, hector_pose_estimation_core,
  rtt_sensor_msgs]
hector_quadrotor: [common_msgs, hector_common, hector_gazebo, hector_models, ros,
  ros_comm, simulator_gazebo]
hector_quadrotor_apps: [hector_quadrotor, hector_slam]
hector_quadrotor_controller: [nav_msgs, roscpp, hector_uav_msgs, sensor_msgs, geometry_msgs,
  gazebo]
hector_quadrotor_demo: [hector_gazebo_worlds, hector_quadrotor_gazebo, hector_geotiff,
  hector_trajectory_server, hector_mapping]
hector_quadrotor_experimental: [ros, hector_quadrotor, ethzasl_ptam]
hector_quadrotor_gazebo: [hector_quadrotor_gazebo_plugins, message_to_tf, hector_gazebo_plugins,
  hector_quadrotor_controller, gazebo_plugins, hector_sensors_gazebo]
hector_quadrotor_gazebo_plugins: [hector_gazebo_plugins, geometry_msgs, gazebo, roscpp,
  hector_uav_msgs]
hector_quadrotor_ptam: [hector_quadrotor_gazebo, hector_nist_arena_worlds, ptam]
hector_quadrotor_teleop: [geometry_msgs, sensor_msgs, roscpp]
hector_quadrotor_urdf: [hector_sensors_description]
hector_rgbd_test_gazebo: [xacro, gazebo, hector_sensors_gazebo, hector_xacro_tools]
hector_sandbox: [ros]
hector_sensors_gazebo: [hector_gazebo_plugins, gazebo_plugins, hector_sensors_description]
hector_slam: [ros, common_msgs, geometry, ros_comm, laser_pipeline, image_common,
  hector_common, vision_opencv]
hector_slam_launch: [hector_geotiff, hector_trajectory_server, hector_mapping, hector_map_server]
hector_trajectory_server: [nav_msgs, tf, hector_map_tools, hector_nav_msgs]
hector_turtlebot: [ros]
hector_turtlebot_description: [hector_sensors_description, turtlebot_description]
hector_turtlebot_gazebo: [hector_turtlebot_description, hector_turtlebot_scan_filter,
  pointcloud_to_laserscan, turtlebot_gazebo, turtlebot_gazebo_plugins]
hector_turtlebot_scan_filter: [sensor_msgs]
hector_uav_msgs: [geometry_msgs]
hector_ugv_common: [ros]
hector_ugv_description: [hector_xacro_tools, hector_sensors_description]
hector_ugv_gazebo: [hector_ugv_description]
hector_worldmodel: [common_msgs, geometry, hector_common, hector_slam, ros, ros_comm,
  vision_opencv]
humanoid_walk: [bullet, common_msgs, common_rosdeps, diagnostics, geometry, ros, ros_comm,
  robot_model_py]
image_cb_detector: [roscpp, actionlib, sensor_msgs, image_transport, opencv2, geometry_msgs,
  calibration_msgs, cv_bridge, actionlib_msgs, pcl_ros]
imu_drivers: [common_msgs, diagnostics, geometry, ros, ros_comm]
imu_filter: [dynamic_reconfigure, roscpp, opencv2, microstrain_3dmgx2_imu, geometry_msgs,
  visualization_msgs, tf, eigen]
interpolated_ik_motion_planner: [rospy, kinematics_msgs, geometry_msgs, arm_navigation_msgs,
  visualization_msgs, sensor_msgs, trajectory_msgs]
interval_intersection: [actionlib_msgs, calibration_msgs, roscpp, actionlib]
irobot_create_2_1: [roscpp, rospy, geometry_msgs, tf, nav_msgs, python-serial]
joint_normalization_filters: [spline_smoother, angles, filters]
joint_state_publisher: [sensor_msgs, wxpython, rospy]
joint_states_settler: [roscpp, actionlib_msgs, sensor_msgs, settlerlib, calibration_msgs,
  actionlib]
kdl_parser: [kdl, urdf, roscpp]
kinect_depth_calibration: [kdl, stereo_msgs, roslib, sensor_msgs, opencv2, rospy,
  tf, geometry_msgs, cv_bridge, tf_conversions]
kinematics_base: [kinematics_msgs]
kinematics_msgs: [geometry_msgs, trajectory_msgs, arm_navigation_msgs]
kingfisher: [camera_drivers, image_pipeline, image_transport_plugins, multimaster_experimental,
  ros, ros_comm, rosserial]
kingfisher_bringup: [kingfisher_msgs, rosserial_python, app_manager, camera1394, image_proc,
  compressed_image_transport]
kingfisher_node: [rospy, rosserial_python, kingfisher_msgs, std_msgs]
laser_assembler: [roscpp, std_msgs, geometry_msgs, laser_geometry, laser_filters,
  sensor_msgs, tf]
laser_cb_detector: [roscpp, message_filters, actionlib_msgs, std_msgs, opencv2, calibration_msgs,
  image_cb_detector, cv_bridge]
laser_filters: [sensor_msgs, roscpp, tf, filters, message_filters, laser_geometry,
  pluginlib, pcl_ros]
laser_geometry: [sensor_msgs, roscpp, tf, angles, common_rosdeps, eigen]
laser_pipeline: [common_msgs, common_rosdeps, filters, geometry, perception_pcl, pluginlib,
  ros, ros_comm]
laser_scan_publisher_tutorial: [sensor_msgs, roscpp]
laser_slam_mapper: [roscpp, topological_map_2d, mongo_roscpp, octomap_ros, pcl, visualization_msgs,
  tf, laser_slam]
launch_tools: [roslib, rospy]
libfreenect: [git, cmake, glut, libusb-1.0-dev, libxi-dev, libxmu-dev, pkg-config]
libpcan: [linux-headers-generic, libpopt-dev]
libphidgets: [libusb-dev]
map_server: [rosconsole, roscpp, rospy, nav_msgs, tf, common_rosdeps, python-imaging,
  python-yaml, yaml-cpp, sdl-image]
mapping_rviz_plugin: [rviz, roscpp, arm_navigation_msgs, tf]
master_discovery_fkie: [rospy, roslib, python-avahi, avahi-daemon]
master_sync_fkie: [rospy, roslib, rosgraph, master_discovery_fkie]
megatree: [ros]
megatree_cpp: [megatree_core, gtest, megatree_storage, eigen]
megatree_import: [megatree_cpp, megatree_storage]
megatree_pcl: [megatree_cpp, megatree_storage, pcl_ros]
megatree_server: [megatree_cpp, megatree_core, fcgi]
megatree_storage: [megatree_core]
megatree_web: [megatree_cpp]
message_to_tf: [tf, nav_msgs, geometry_msgs, sensor_msgs]
microstrain_3dmgx2_imu: [roscpp, sensor_msgs, self_test, diagnostic_updater, tf, std_srvs]
mongo_ros: [roscpp, mongodb, std_msgs, geometry_msgs, tf, rospy, pymongo]
mongodb: [tcsh, xulrunner-dev, pcre-dev, scons, readline-dev, rospy]
monocam_settler: [settlerlib, actionlib, roscpp, actionlib_msgs, calibration_msgs]
motion_planning_rviz_plugin: [rviz, roscpp, tf, planning_models, planning_environment,
  arm_navigation_msgs]
move_arm: [roscpp, rosconsole, std_msgs, geometry_msgs, visualization_msgs, geometric_shapes,
  planning_models, planning_environment, actionlib, actionlib_msgs, tf_conversions,
  control_msgs, trajectory_msgs, kinematics_msgs, arm_navigation_msgs, interactive_markers]
move_arm_head_monitor: [roscpp, actionlib, actionlib_msgs, pr2_controllers_msgs, control_msgs,
  visualization_msgs, tf, planning_environment, head_monitor_msgs, common_rosdeps,
  eigen]
move_arm_warehouse: [roscpp, rosconsole, std_msgs, arm_navigation_msgs, geometry_msgs,
  arm_navigation_msgs, visualization_msgs, geometric_shapes, planning_models, planning_environment,
  actionlib, actionlib_msgs, tf_conversions, pr2_controllers_msgs, kinematics_msgs,
  mongo_ros, move_arm_head_monitor, geometry_msgs, interactive_markers, pr2_mechanism_msgs,
  interpolated_ik_motion_planner, ompl_ros_interface, interpolated_ik_motion_planner,
  constraint_aware_spline_smoother]
move_base: [roscpp, rosconsole, std_msgs, move_base_msgs, geometry_msgs, visualization_msgs,
  actionlib, nav_core, pluginlib, costmap_2d, tf, nav_msgs, roslib, rospy, rosmsg,
  rostopic, std_srvs, dynamic_reconfigure, common_rosdeps, base_local_planner, navfn,
  clear_costmap_recovery, rotate_recovery, eigen]
move_base_msgs: [roslib, std_msgs, actionlib_msgs, geometry_msgs]
move_slow_and_clear: [roscpp, nav_core, costmap_2d, geometry_msgs, pluginlib, dynamic_reconfigure,
  common_rosdeps, eigen]
multi_master_fkie: [ros]
multi_robot_collision_avoidance: [common, common_msgs, driver_common, geometry, navigation,
  pluginlib, ros, ros_comm, stage]
multimaster: [rospy, rosgraph]
multimaster_experimental: [ros, ros_comm]
nav_core: [std_msgs, geometry_msgs, costmap_2d, tf]
nav_msgs: [geometry_msgs]
navfn: [rosconsole, roscpp, geometry_msgs, costmap_2d, nav_core, pluginlib, nav_msgs,
  tf, visualization_msgs, pcl_ros, common_rosdeps, eigen, fltk, netpbm]
navigation: [actionlib, bfl, common_msgs, common_rosdeps, dynamic_reconfigure, geometry,
  laser_pipeline, perception_pcl, pluginlib, ros, ros_comm]
navigation_experimental: [common, common_msgs, filters, geometry, navigation, pluginlib,
  pr2_controllers, ros, ros_comm, common_rosdeps]
navigation_stage: [move_base, map_server, gmapping, amcl, fake_localization, stage]
navigation_tutorials: [common, common_msgs, geometry, navigation, ros, ros_comm, slam_gmapping,
  stage]
netft: [common_msgs, diagnostics, pr2_ethercat_drivers, pr2_mechanism, ros, ros_comm]
netft_ethercat_hardware: [netft_rdt_driver, geometry_msgs, roscpp, ethercat_hardware,
  realtime_tools]
netft_example_controllers: [roscpp, ethercat_hardware, pr2_controller_interface]
netft_rdt_driver: [diagnostic_updater, geometry_msgs, roscpp, diagnostic_msgs]
nite: [openni, nite-dev, ps-engine]
nmea_gps_driver: [sensor_msgs, std_msgs, rospy, geometry_msgs, python-serial]
node_manager_fkie: [rospy, roslib, rosgraph, roslaunch, rosservice, dynamic_reconfigure,
  master_discovery_fkie, default_cfg_fkie, python-pyside, python-paramiko, python-psutil,
  pyside-tools, python-pyside.qtuitools, screen, xterm]
nodelet: [uuid, bondcpp, rospy, roscpp, pluginlib]
nodelet_core: [bond_core, dynamic_reconfigure, pluginlib, ros, ros_comm]
nodelet_topic_tools: [dynamic_reconfigure, roscpp, message_filters, std_msgs, rospy,
  nodelet]
nodelet_tutorial_math: [nodelet, roscpp, std_msgs]
object_recognition_gui: [roscpp, rviz_interaction_tools, ogre_tools, actionlib, sensor_msgs,
  geometric_shapes_msgs, stereo_msgs, geometry_msgs, actionlib_msgs, rviz]
object_segmentation_gui: [tabletop_object_detector, rviz, stereo_msgs, ogre_tools,
  actionlib, active_realtime_segmentation, sensor_msgs, image_transport, rviz_interaction_tools,
  geometry_msgs, rgbd_assembler, tf, actionlib_msgs, roscpp]
object_tracker: [image_geometry, worldmodel_msgs, roscpp, hector_nav_msgs, hector_marker_drawing,
  tf, tf_conversions, eigen]
occupancy_grid_utils: [nav_msgs, geometry_msgs, tf, sensor_msgs, roscpp, laser_geometry,
  bullet, rospy, map_server]
odometry_publisher_tutorial: [nav_msgs, tf, roscpp]
ogre_tools_qt: [rosconsole, roslib, ogre]
ompl_ros_interface: [sensor_msgs, planning_models, planning_environment, arm_navigation_msgs,
  kinematics_base, pluginlib, ompl]
open_street_map: [common_msgs, driver_common, geographic_info, geometry, ros, ros_comm]
openni: [openni-dev]
openni_camera: [dynamic_reconfigure, openni-dev, roscpp, ps-engine, camera_info_manager,
  sensor_msgs, image_transport, libusb-1.0-dev, nodelet]
openni_camera_deprecated: [openni_camera, camera_info_manager, dynamic_reconfigure,
  image_transport, nodelet, roscpp, sensor_msgs, common_rosdeps, pcl, pcl_ros, stereo_msgs,
  tf, eigen]
openni_kinect: [common_msgs, common_rosdeps, dynamic_reconfigure, geometry, image_common,
  nodelet_core, openni_camera, openni_launch, openni_tracker, perception_pcl, ros,
  ros_comm]
openni_launch: [depth_image_proc, image_proc, nodelet, openni_camera, tf]
openni_tracker: [kdl, openni-dev, roscpp, ps-engine, roslib, nite-dev, geometry_msgs,
  tf]
openrtm_cpp: [pkg-config, uuid, omniorb, python-yaml, doxygen]
osm_cartography: [dynamic_reconfigure, geodesy, geographic_msgs, geometry_msgs, rospy,
  tf, std_msgs, visualization_msgs]
pacman_controller: [rospy, roscpp, std_msgs, std_srvs, visualization_msgs, geometry_msgs,
  collvoid_msgs, collvoid_local_planner, tf, actionlib, move_base_msgs]
pipette_driver: [dynamic_reconfigure, driver_base, rospy, diagnostic_msgs]
planning_environment: [roscpp, rosconsole, rosbag, actionlib_msgs, actionlib, tf,
  std_srvs, message_filters, angles, geometric_shapes, sensor_msgs, arm_navigation_msgs,
  visualization_msgs, planning_models, collision_space, pcl_ros, robot_self_filter,
  rviz, yaml-cpp, libqt4-dev, tinyxml, pkg-config]
planning_models: [urdf, rosconsole, geometric_shapes, bullet, angles, pkg-config]
pluginlib: [rosconsole, roslib, tinyxml]
pluginlib_tutorials: [pluginlib, roscpp]
point_cloud_publisher_tutorial: [sensor_msgs, roscpp]
pointcloud_to_laserscan: [dynamic_reconfigure, sensor_msgs, nodelet, pcl_ros]
pose_base_controller: [actionlib, move_base_msgs, nav_msgs, roscpp, tf, geometry_msgs]
pose_follower: [nav_core, base_local_planner, costmap_2d, roscpp, tf, nav_msgs, pluginlib]
pr2_arm_ik_tests: [pr2_controller_manager, pr2_arm_navigation_perception, pluginlib,
  kinematics_base, robot_state_publisher, pr2_arm_kinematics, pr2_arm_navigation_kinematics,
  gazebo, pr2_gazebo]
pr2_arm_navigation_tests: [arm_navigation, common, common_msgs, diagnostics, image_pipeline,
  kinematics, motion_planning_common, pr2_arm_navigation, pr2_common, pr2_controllers,
  pr2_kinematics, pr2_mechanism, pr2_simulator, robot_model, ros, ros_comm, simulator_gazebo]
pr2_biolab_gazebo_demo: [roscpp, gazebo_worlds, robot_state_publisher, pr2_common_action_msgs,
  joint_trajectory_action, geometry_msgs, tf, pr2_tuckarm, biolab_description, pr2_controllers_msgs,
  gazebo, actionlib, kinematics_msgs, pr2_gazebo]
pr2_common_alpha: [common_msgs, joystick_drivers, robot_model, ros, ros_comm, xacro]
pr2_defs: [convex_decomposition, ivcon, urdf, xacro]
pr2_make_a_map_app: [pr2_position_scripts, gmapping, tf, mongodb, topic_tools, map_store]
pr2_pan_tilt: [geometry_msgs, pr2_controllers_msgs, topic_tools, actionlib, rospy,
  tf]
pr2_tabletop_manipulation_apps: [ros]
pr2_tuck_arms_app: [rospy, trajectory_msgs, pr2_mechanism_msgs, pr2_tuck_arms_action]
ptp_arm_action: [tf, pycontroller_manager, actionlib, rospy, object_manipulator]
pycontroller_manager: [pr2_mechanism_msgs, rospy]
pymongo: [mongodb]
pyqrnative: [python-imaging]
rbdl: [urdf, urdf_interface, eigen, libunittest++]
rcommander: [smach_ros, nodebox_qt, python-qt4-gl, actionlib, smach, rospy, tf_broadcast_server,
  tf, geometry_msgs]
rcommander_core: [ros, ros_comm, common, common_msgs, executive_smach, geometry]
rcommander_plain: [rospy, rcommander]
rcommander_pr2: [ros, ros_comm, common, common_msgs, geometry, navigation, arm_navigation,
  executive_smach, pr2_controllers, pr2_mechanism]
rcommander_pr2_gui: [arm_navigation_msgs, trajectory_msgs, spline_smoother, kinematics_msgs,
  face_detector, actionlib, pr2_common_action_msgs, tts_server, ptp_arm_action, tf_broadcast_server,
  tf, pr2_object_manipulation_msgs, sensor_msgs, std_msgs, pr2_gripper_sensor_msgs,
  object_manipulator, rospy, move_base_msgs, pr2_controllers_msgs, smach, geometry_msgs,
  rcommander]
resource_retriever: [roslib, rosconsole, curl]
robot_model: [common_msgs, common_rosdeps, geometry, orocos_kinematics_dynamics, ros,
  ros_comm]
robot_model_py: [ros, ros_comm]
robot_model_tutorials: [ros]
robot_model_visualization: [common_msgs, ros, ros_comm]
robot_monitor: [rxbag, wxpython, rospy, diagnostic_msgs, wxwidgets]
robot_pose_ekf: [roscpp, rosbag, bfl, std_msgs, geometry_msgs, sensor_msgs, nav_msgs,
  tf]
robot_pose_publisher: [roscpp, tf, geometry_msgs]
robot_self_filter: [roscpp, tf, filters, sensor_msgs, visualization_msgs, geometric_shapes,
  urdf, resource_retriever, shape_msgs, pcl, assimp, pkg-config]
robot_setup_tf_tutorial: [tf, geometry_msgs, roscpp]
robot_state_publisher: [kdl_parser, sensor_msgs, roscpp, tf, tf_conversions]
romeo: [ros]
rosbag: [python-imaging, bzip2]
rosconsole: [apr, log4cxx]
roscpp: [roslang, pkg-config]
roscpp_tutorials: [std_msgs, std_srvs, roscpp]
rosdoc_lite: [rospkg, genmsg, doxygen, epydoc, python-sphinx, python-yaml]
rosh: [rosparam, roshlaunch, rosgraph, rosservice, rospy, rostopic, ipython, rosnode,
  rosmsg]
rosh_common: [nav_msgs, rosh, sensor_msgs, actionlib, roslib, std_msgs, rospy, rosmsg,
  rostopic]
rosh_core: [ros, ros_comm]
rosh_desktop: [rosh, rosh_robot, rosh_visualization]
rosh_desktop_plugins: [ros, rosh_robot_plugins, visualization]
rosh_geometry: [tf, geometry_msgs, roslib, rospy, rosh]
rosh_robot: [rosh, rosh_geometry, rosh_common]
rosh_robot_plugins: [common, common_msgs, geometry, ros, ros_comm, rosh_core]
rosh_visualization: [roslib, rosh, rviz]
roshlaunch: [python-yaml, roslib, rosgraph, rosmaster, rosout, rosclean, rospy, paramiko]
rosjs: [ros]
roslaunch: [python-yaml, python-paramiko]
roslib: [python, boost]
roslisp: [roslang]
rosmatlab: [rosbuild, cpp_introspection, roscpp]
rosmatlab_common_msgs: [rosmatlab, std_msgs]
rosparam: [python-yaml]
rosproxy: [rospy, rosgraph, roslib, rosservice, rostopic]
rospy: [roslang]
rosrtw: [rosbuild, rosmatlab]
rosrtw_examples: [rosrtw]
rosserial: [common_msgs, geometry, ros, ros_comm]
rosserial_adk_demo: [sensor_msgs, std_msgs, rosserial_adk_demo_msgs, rosserial_arduino,
  geometry_msgs]
rosserial_android: [nav_msgs, rosserial_java, std_msgs, sensor_msgs, rosjava, rosserial_msgs,
  android]
rosserial_arduino: [nav_msgs, avr-libc, std_msgs, sensor_msgs, gcc-avr, geometry_msgs,
  rosserial_client]
rosserial_client: [tf, rosserial_msgs, std_msgs]
rosserial_embeddedlinux: [nav_msgs, sensor_msgs, std_msgs, geometry_msgs, rosserial_client]
rosserial_java: [rosjava, rosserial_msgs]
rosserial_java_node: [rosserial_java]
rosserial_python: [rosserial_msgs, rospy]
rosserial_xbee: [rosserial_python]
rosunit: [gtest]
roswtf: [python-paramiko]
rotate_recovery: [roscpp, nav_core, tf, costmap_2d, geometry_msgs, base_local_planner,
  pluginlib, angles, common_rosdeps, eigen]
route_network: [dynamic_reconfigure, geodesy, geographic_msgs, geometry_msgs, nav_msgs,
  rospy, visualization_msgs]
runtime_monitor: [rxbag, wxpython, rospy, diagnostic_msgs, wxwidgets]
rve_common: [rve_msgs, roslib, eigen]
rve_common_transformers: [roscpp, rve_properties, rve_render_client, rve_transformer,
  rve_common, rve_pluginloader, tf2, nav_msgs, sensor_msgs]
rve_dynlib: [rosconsole, roslib]
rve_geometry: [roscpp, rve_common, rve_render_client, rve_msgs]
rve_interface_gen: [roslib, roscpp, rve_rpc, std_msgs]
rve_interfaces: [rve_interface_gen, rve_msgs, geometry_msgs, std_msgs, sensor_msgs]
rve_mesh_loader: [assimp, rosconsole, eigen, rve_msgs, rve_common, resource_retriever]
rve_msgs: [geometry_msgs, std_msgs, roscpp]
rve_pluginloader: [yaml_cpp, rosconsole, rve_dynlib]
rve_properties: [roscpp]
rve_qt: [roscpp, rve_msgs, rve_render_client, rve_interfaces, qt4]
rve_render_client: [rve_interfaces, rve_common, rve_mesh_loader, rve_properties, urdf]
rve_render_server: [ogre, ogre_tools, rve_common, rve_interfaces, rve_mesh_loader,
  sensor_msgs, roscpp]
rve_rpc: [roscpp, roslib, rve_common, rve_msgs, std_msgs]
rve_transformer: [roscpp, tf, tf2, tf2_ros, message_filters, rve_render_client, rve_interface_gen,
  rve_interfaces, rve_msgs, rve_common, rve_pluginloader, rve_properties]
rviz_qt: [rosconsole, ogre, pyside, interactive_markers, resource_retriever, nav_msgs,
  laser_geometry, roscpp, libqt4-dev, qt4-qmake, yaml-cpp, visualization_msgs, tf,
  common_rosdeps, urdf_interface, urdf, message_filters, std_msgs, sensor_msgs, libqt4-opengl-dev,
  image_transport, assimp, rospy, std_srvs, pluginlib, ogre_tools_qt, geometry_msgs]
rxbag: [rxtools, rosgraph, roslib, std_msgs, wxpython, rospy, rosbag, python-gtk2]
rxgraph: [xdot, rosnode, rosgraph, rostopic]
rxtools: [rosgraph_msgs, python-matplotlib, wxwidgets, roslib, wxPython_swig_interface,
  wxpython, rospy, swig-wx, python-gtk2, roscpp]
sbpl_lattice_planner: [roscpp, costmap_2d, nav_core, pluginlib, geometry_msgs, nav_msgs,
  sbpl]
sbpl_recovery: [roscpp, nav_core, sbpl_lattice_planner, pose_follower, costmap_2d,
  pluginlib, base_local_planner]
semantic_model_web_interface: [mongo_ros, pcl, semanticmodel]
semanticmodel: [stereo_msgs, move_base_msgs, mongo_ros, nav_msgs, actionlib, driver_base,
  topic_tools, flann, visualization_msgs, tf, nodelet, image_geometry, message_filters,
  mongodb, sensor_msgs, image_transport, opencv2, rospy, pcl16_ros, cv_bridge, dynamic_reconfigure,
  std_srvs, occupancy_grid_utils, geometry_msgs, pcl16]
sensor_msgs: [geometry_msgs]
serial_communication: [ros, ros_comm]
settlerlib: [roscpp, calibration_msgs]
shape_msgs: [geometry_msgs, std_msgs]
simmechanics_to_urdf: [rospy, sensor_msgs, tf, python-yaml]
simple_navigation_goals_tutorial: [move_base_msgs, tf, actionlib, roscpp]
simple_object_capture: [pcl, roscpp, sensor_msgs, message_filters, dynamic_reconfigure,
  opencv2, cv_bridge, rosbag, image_geometry]
slam_gmapping: [common_msgs, geometry, navigation, ros, ros_comm]
smach_ros: [std_srvs, actionlib, std_msgs, smach, rostest, rospy, rostopic, smach_msgs,
  actionlib_msgs]
smach_viewer: [smach_ros, xdot, smach_msgs]
sound_play: [roscpp, libgstreamer-plugins-base0.10-dev, festival, roslib, libgstreamer0.10-dev,
  gstreamer0.10-plugins-good, python-gst, rospy, gstreamer0.10-plugins-ugly, diagnostic_msgs]
spline_smoother: [urdf, angles, roscpp, filters, trajectory_msgs, arm_navigation_msgs]
sql_database: [common_rosdeps, ros, ros_comm]
srdf: [urdf, rosconsole, tinyxml]
srs_common: [arm_navigation, common_msgs, perception_pcl, ros, ros_comm]
srs_object_database_msgs: [pcl, visualization_msgs, sensor_msgs, arm_navigation_msgs]
srv_tools: [ros]
stereo_msgs: [sensor_msgs]
student_database: [database_interface]
tabletop_collision_map_processing: [household_objects_database_msgs, std_srvs, actionlib,
  geometric_shapes_msgs, collision_environment_msgs, pr2_msgs, tf, mapping_msgs, object_manipulation_msgs,
  tabletop_object_detector]
tabletop_object_detector: [household_objects_database_msgs, roscpp, sensor_msgs, distance_field,
  geometry_msgs, pcl, visualization_msgs, tf, pcl_ros]
tabletop_object_perception: [common, common_msgs, geometry, image_common, motion_planning_common,
  object_manipulation, perception_pcl, pr2_common, pr2_object_manipulation, ros, ros_comm,
  visualization, visualization_common]
telekyb_algo: [ros, ros_comm, telekyb_common]
telekyb_base: [roscpp, telekyb_msgs, telekyb_defines, yaml_wrapper, eigen3_wrapper,
  telekyb_srvs]
telekyb_behaviors: [ros, ros_comm, telekyb_main]
telekyb_calculus: [roscpp, telekyb_base]
telekyb_common: [ros, ros_comm]
telekyb_core: [tk_trajprocessor, roscpp, telekyb_base, tk_state, telekyb_msgs, sensor_msgs,
  tk_trajctrl, tk_behavior, telekyb_defines]
telekyb_deps: [ros]
telekyb_drivers: [ros, ros_comm, telekyb_deps]
telekyb_exp: [ros, ros_comm]
telekyb_haptics: [pluginlib, ros, ros_comm]
telekyb_hid: [yaml_wrapper, telekyb_base, sensor_msgs, hidapi_wrapper, telekyb_defines,
  roscpp]
telekyb_interface: [telekyb_msgs, telekyb_defines, roscpp, telekyb_base, telekyb_srvs]
telekyb_joystick: [sensor_msgs, telekyb_defines, roscpp, telekyb_base]
telekyb_main: [ros, ros_comm, telekyb_common]
telekyb_msgs: [geometry_msgs, std_msgs]
telekyb_sensors: [ros, ros_comm, telekyb_common]
telekyb_serial: [telekyb_defines, roscpp]
telekyb_srvs: [telekyb_msgs, std_srvs]
telekyb_swarm: [ros, ros_comm, telekyb_common, telekyb_main]
telekyb_utils: [common_msgs, ros, ros_comm, telekyb_common]
telekyb_vicon: [roscpp, telekyb_base, telekyb_msgs, viconsdk_wrapper, geometry_msgs,
  tf]
telekyb_vrpn: [tf, vrpn_wrapper, roscpp, telekyb_base]
teleop_head: [joy, trajectory_msgs, sensor_msgs, roscpp]
test_bond: [rostest, bondpy, bondcpp, bond]
test_collision_space: [roslib, roscpp, planning_environment, planning_models, visualization_msgs,
  collision_space]
test_nodelet: [std_msgs, rostest, nodelet, pluginlib]
test_osm: [osm_cartography, route_network, geodesy, geographic_msgs]
test_rospy: [python-numpy]
test_rve: [roscpp, rosconsole, eigen, rve_msgs, rve_common, rve_interfaces, rve_interface_gen,
  rve_render_server, rve_render_client, rve_qt, rve_transformer, rve_common_transformers,
  urdf, nodelet, qt4]
test_tf2: [rostest, tf, tf2, tf2_bullet, tf2_ros, tf2_geometry_msgs, tf2_kdl, tf2_msgs,
  roscpp, roslib]
tf: [rosconsole, roscpp, bullet, python-numpy, sensor_msgs, graphviz, rostest, geometry_msgs,
  angles, message_filters, rospy, roswtf]
tf2: [geometry_msgs, tf2_msgs, rospy, roscpp]
tf2_bullet: [tf2_ros, bullet, geometry_msgs]
tf2_geometry_msgs: [geometry_msgs, tf2_ros, kdl]
tf2_kdl: [tf2_ros, kdl, geometry_msgs]
tf2_msgs: [geometry_msgs, actionlib_msgs]
tf2_ros: [tf2, tf2_msgs, roscpp, rospy, geometry_msgs, std_msgs, actionlib, actionlib_msgs,
  rosgraph, message_filters]
tf2_tools: [tf2_msgs, tf2, tf2_ros]
tf2_visualization: [xdot, rxbag, tf2_msgs, tf2_ros, tf2]
tf_broadcast_server: [tf, geometry_msgs]
tf_conversions: [tf, kdl, geometry_msgs, eigen]
tf_tools: [tf]
timestamp_tools: [roslib, roscpp]
tk_bagtools: [telekyb_base, roscpp, message_filters, telekyb_msgs, sensor_msgs, tk_haptics_msgs,
  rosbag]
tk_be_common: [tk_behavior, sensor_msgs, roscpp]
tk_behavior: [tk_trajprocessor, roscpp, telekyb_base, pluginlib, tk_state, telekyb_msgs,
  tk_trajctrl, telekyb_defines, telekyb_srvs]
tk_conversion: [telekyb_msgs, roscpp, telekyb_base]
tk_ctrlalgo: [telekyb_defines, roscpp, telekyb_base]
tk_draft_msgs: [telekyb_msgs]
tk_exception: [telekyb_msgs, telekyb_defines, roscpp, telekyb_base]
tk_formation: [telekyb_calculus, roscpp, telekyb_base, telekyb_interface, tk_haptics_base,
  tk_obstacle, tk_behavior]
tk_generic_killer: [topic_tools, roscpp, telekyb_base]
tk_handjoystick: [sensor_msgs, geometry_msgs, roscpp, telekyb_base]
tk_haptics_base: [tk_haptics_msgs, telekyb_defines, roscpp, telekyb_base, pluginlib]
tk_haptics_msgs: [telekyb_msgs]
tk_mkinterface: [telekyb_serial, telekyb_base, roscpp, telekyb_msgs]
tk_obstacle: [telekyb_calculus, roscpp, telekyb_base, pluginlib]
tk_param_estimator: [pluginlib, telekyb_defines, roscpp, telekyb_base, tk_draft_msgs]
tk_smurf_interface: [telekyb_serial, telekyb_msgs, roscpp, telekyb_base, tk_draft_msgs]
tk_state: [roscpp, telekyb_base, pluginlib, telekyb_msgs, sensor_msgs, odeint_wrapper,
  telekyb_defines, tf, tk_draft_msgs]
tk_trajctrl: [roscpp, telekyb_base, tk_param_estimator, tk_state, telekyb_msgs, tk_ctrlalgo,
  telekyb_defines]
tk_trajprocessor: [roscpp, telekyb_base, pluginlib, tk_state, telekyb_msgs, tk_obstacle,
  tk_trajctrl, telekyb_defines, telekyb_srvs]
topological_map_2d: [topological_nav_msgs, roscpp, graph_mapping_utils]
topological_nav_msgs: [nav_msgs, geometry_msgs]
topological_navigation: [common, common_msgs, geometry, graph_mapping, navigation,
  ros, ros_comm, warehousewg]
topological_roadmap: [navfn, costmap_2d, occupancy_grid_utils, actionlib, topological_nav_msgs,
  topological_map_2d, graph_mapping_utils, mongo_roscpp, visualization_msgs, move_base_msgs]
trajectory_execution_monitor: [arm_navigation_msgs, control_msgs, actionlib, pr2_controllers_msgs,
  planning_environment]
trajectory_filter_server: [filters, roscpp, trajectory_msgs, arm_navigation_msgs,
  spline_smoother, joint_normalization_filters, urdf]
tts_server: [rospy, festival-extra]
turtle_actionlib: [roscpp, std_msgs, rosconsole, actionlib, actionlib_msgs, turtlesim,
  angles]
turtle_tf: [tf, turtlesim, rospy, roscpp]
turtlebot: [common_msgs, driver_common, geometry, image_transport_plugins, joystick_drivers,
  multimaster_experimental, nodelet_core, openni_kinect, orocos_kinematics_dynamics,
  perception_pcl, robot_model, ros, ros_comm, xacro]
turtlebot_actions: [roscpp, actionlib, tf, image_transport, common_rosdeps, cv_bridge,
  image_geometry, opencv2, eigen]
turtlebot_apps: [common, common_msgs, common_rosdeps, geometry, image_common, joystick_drivers,
  laser_pipeline, navigation, nodelet_core, orocos_kinematics_dynamics, perception_pcl,
  ros, ros_comm, slam_gmapping, vision_opencv]
turtlebot_arm: [arbotix, arm_navigation, common, common_msgs, eigen, geometry, image_common,
  perception_pcl, robot_model, ros, ros_comm, simple_arms, turtlebot, vision_opencv,
  visualization, xacro]
turtlebot_arm_bringup: [simple_arm_server, planning_environment, arbotix_python, arm_kinematics_constraint_aware,
  arbotix_controllers]
turtlebot_arm_description: [urdf, xacro, turtlebot_description]
turtlebot_arm_interactive_markers: [roscpp, arbotix_msgs, actionlib, interactive_markers,
  visualization_msgs, simple_arm_server, arbotix_controllers]
turtlebot_block_manipulation: [roscpp, actionlib, interactive_markers, visualization_msgs,
  simple_arm_server, simple_arm_actions, pcl_ros]
turtlebot_bringup: [compressed_image_transport, turtlebot_driver, joy, robot_state_publisher,
  pointcloud_to_laserscan, openni_camera, turtlebot_node, turtlebot_description, app_manager]
turtlebot_calibration: [rospy, sensor_msgs, nav_msgs, geometry_msgs, kdl]
turtlebot_dashboard: [rxtools, std_srvs, roslib, std_msgs, robot_monitor, rospy, turtlebot_node]
turtlebot_description: [urdf, xacro]
turtlebot_follower: [nodelet, tf, roscpp, pcl_ros]
turtlebot_gazebo_plugins: [gazebo, nav_msgs, geometry_msgs, sensor_msgs, turtlebot_node]
turtlebot_interactive_markers: [interactive_markers, roscpp, visualization_msgs]
turtlebot_kinect: [openni_camera, clearpath_tools, clearpath_kinect_demo]
turtlebot_kinect_arm_calibration: [image_geometry, eigen, image_transport, opencv2,
  pcl, visualization_msgs, tf, pcl_ros, cv_bridge, roscpp]
turtlebot_navigation: [move_base, gmapping]
turtlebot_node: [nav_msgs, kdl, rospy, dynamic_reconfigure, turtlebot_driver, tf,
  geometry_msgs, diagnostic_msgs, daemontools]
turtlebot_rndmwalk: [clearpath_tools, clearpath_kinect_demo, turtlebot_node]
turtlebot_simulator: [common_msgs, ros, simulator_gazebo, turtlebot]
turtlebot_teleop: [joy, geometry_msgs, roscpp]
turtlebot_train: [clearpath_tools, clearpath_kinect_demo, turtlebot_node]
turtlebot_viz: [common_msgs, diagnostics_monitors, ros, ros_comm, rx, turtlebot, visualization]
turtlesim: [qt4-qmake, libqt4-dev]
twist_recovery: [nav_core, costmap_2d, geometry_msgs, pluginlib, base_local_planner]
unique_id: [roscpp, rospy, rosunit, uuid_msgs]
unique_identifier: [ros, ros_comm]
universal_robot: [geometry_experimental, robot_model, actionlib, ros_comm, control,
  common_msgs]
ur5_bringup: [ur5_driver, ur5_description, tf2_ros]
ur5_description: [urdf]
ur5_driver: [sensor_msgs, control_msgs, actionlib, rospy]
ur5_gazebo: [ur5_description]
urdf: [roscpp, colladadom, urdf_parser, collada_parser]
urdf_interface: [tinyxml]
urdf_parser: [roscpp, urdf_interface, tinyxml]
urdf_parser_py: [rospy]
viso2: [ros]
viso2_ros: [nav_msgs, image_geometry, roscpp, message_filters, libviso2, sensor_msgs,
  image_transport, tf, cv_bridge, pcl_ros]
visualization_engine: [common, common_msgs, geometry, laser_pipeline, robot_model,
  ros, visualization_common, image_common]
visualization_experimental: [common_msgs, common_rosdeps, geometry, image_common,
  laser_pipeline, pluginlib, robot_model, ros, ros_comm, visualization, visualization_common]
visualization_msgs: [std_msgs, geometry_msgs]
voxel_grid: [rosconsole]
vrmagic_camera: [ros]
vrmagic_devkit_wrapper: [roscpp]
vrmagic_multi_driver: [roscpp, stereo_msgs, sensor_msgs, vrmagic_devkit_wrapper, image_transport,
  driver_base]
walk_interfaces: [common_rosdeps, boost, eigen, yaml-cpp]
walk_msgs: [roscpp, rospy, common_rosdeps, bullet, geometry_msgs, nav_msgs, walk_interfaces,
  visualization_msgs, angles, boost, eigen]
walk_tools: [rospy, geometry_msgs, sensor_msgs, message_filters, diagnostic_aggregator,
  diagnostic_updater, urdf_parser_py]
warehousewg: [common_msgs, geometry, ros, ros_comm]
wg_common: [ros, langs, langs-dev]
wg_flirtlib: [flirtlib_ros]
wg_pr2_2dnav: [willow_maps, map_server, pr2_navigation_global, pr2_navigation_perception,
  pr2_navigation_teleop, pr2_machine]
wg_pr2_apps: [navigation, pr2_common, pr2_navigation, ros, wg_common]
wge100_camera: [self_test, dynamic_reconfigure, timestamp_tools, roscpp, driver_base,
  std_msgs, sensor_msgs, image_transport, diagnostic_updater, rostest, rospy, camera_calibration_parsers]
wge100_camera_firmware: [gforth, rostest, rospy]
wge100_driver: [common_msgs, diagnostics, driver_common, dynamic_reconfigure, image_common,
  ros, ros_comm]
willow_maps: [langs, langs-dev]
worldmodel: [common, common_msgs, continuous_ops, driver_common, geometry, image_common,
  navigation, nodelet_core, openni_kinect, perception_pcl, pr2_common_actions, pr2_controllers,
  ros, ros_comm, vision_opencv, warehousewg]
worldmodel_geotiff_plugins: [hector_geotiff, worldmodel_msgs]
worldmodel_msgs: [geometry_msgs, sensor_msgs]
worldmodel_ops: [continuous_ops_task_manager]
wxPython_swig_interface: [wxpython]
xacro: [rosbuild, rostest]
xdot: [wxpython, graphviz]
xsens_driver: [rospy, tf, std_msgs, sensor_msgs, geometry_msgs, gps_common, diagnostic_msgs]
