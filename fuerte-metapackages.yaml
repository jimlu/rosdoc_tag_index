actionlib: [actionlib]
arm_navigation: [move_arm, trajectory_filter_server, joint_normalization_filters,
  kinematics_base, planning_models, mapping_rviz_plugin, spline_smoother, robot_self_filter,
  constraint_aware_spline_smoother, arm_kinematics_constraint_aware, kinematics_msgs,
  collision_map, planning_environment, collision_space, arm_navigation_msgs, geometric_shapes,
  motion_planning_rviz_plugin, ompl_ros_interface]
arm_navigation_experimental: [head_monitor_msgs, collider, arm_navigation_experimental_tools,
  trajectory_execution_monitor, move_arm_head_monitor, interpolated_ik_motion_planner,
  chomp_motion_planner, move_arm_warehouse, distance_field, collision_proximity, collision_free_arm_trajectory_controller,
  collision_proximity_planner]
assimp: [assimp]
audio_common: [audio_capture, sound_play, audio_play, audio_common_msgs]
bfl: [bfl]
biorob_common: [biorob_gazebo, biorob_description]
bond_core: [test_bond, smclib, bondpy, bondcpp, bond]
bullet: [bullet]
calibration: [interval_intersection, laser_cb_detector, calibration_estimation, monocam_settler,
  settlerlib, calibration_msgs, image_cb_detector, calibration_launch, joint_states_settler]
camera_pose: [camera_pose_calibration, camera_pose_toolkits, kinect_depth_calibration]
catkin: []
common: []
common_msgs: [nav_msgs, shape_msgs, stereo_msgs, actionlib_msgs, trajectory_msgs,
  sensor_msgs, geometry_msgs, visualization_msgs, diagnostic_msgs]
common_rosdeps: [common_rosdeps]
cpp_introspection: [cpp_introspection]
dynamic_reconfigure: [dynamic_reconfigure]
eigen: [eigen]
executive_smach: [smach_ros, smach, smach_msgs]
executive_smach_visualization: [smach_viewer]
filters: [filters]
flirtlib_features: [flirtlib_ros, wg_flirtlib]
gencpp: [gencpp]
genlisp: [genlisp]
genmsg: [genmsg]
genpy: [genpy]
geometry: [tf, tf_conversions, angles, eigen_conversions]
geometry_experimental: [tf2_geometry_msgs, tf2_bullet, tf2_tools, test_tf2, tf2_ros,
  tf2, tf2_msgs, tf2_kdl]
geometry_tutorials: [turtle_tf]
geometry_visualization: [tf2_visualization]
hector_common: [bfl_eigen, message_to_tf, hector_std_msgs, hector_marker_drawing,
  bfl_boost]
hector_gazebo: [hector_gazebo_plugins, hector_gazebo_worlds, hector_gazebo_thermal_camera]
hector_localization: [hector_pose_estimation_rtt, hector_pose_estimation, hector_pose_estimation_core,
  world_magnetic_model]
hector_models: [hector_xacro_tools, hector_sensors_description, hector_sensors_gazebo]
hector_nist_arenas_gazebo: [hector_nist_arena_elements, hector_nist_arena_worlds,
  hector_nist_arena_designer]
hector_quadrotor: [hector_quadrotor_gazebo_plugins, hector_quadrotor_teleop, hector_quadrotor_controller,
  hector_quadrotor_gazebo, hector_uav_msgs, hector_quadrotor_urdf]
hector_quadrotor_apps: [hector_quadrotor_demo]
hector_quadrotor_experimental: [hector_quadrotor_ptam]
hector_sandbox: [hector_interactive_marker_pose_server, hector_rgbd_test_gazebo, hector_laserscan_to_pointcloud]
hector_slam: [hector_imu_attitude_to_tf, hector_map_tools, hector_compressed_map_transport,
  hector_slam_launch, hector_nav_msgs, hector_trajectory_server, hector_geotiff, hector_map_server,
  hector_mapping]
hector_turtlebot: [hector_turtlebot_description, hector_turtlebot_scan_filter, hector_turtlebot_gazebo,
  hector_turtlebot_apps]
hector_ugv_common: [hector_ugv_description, hector_ugv_gazebo]
hector_worldmodel: [object_tracker, worldmodel_msgs, worldmodel_geotiff_plugins]
imu_filter: [imu_filter]
langs: []
megatree: [megatree_cpp, megatree_import, megatree_web, megatree_storage, megatree_core,
  megatree_server]
megatree_pcl: [megatree_pcl]
multi_master_fkie: [node_manager_fkie, master_discovery_fkie, master_sync_fkie, default_cfg_fkie]
multi_robot_collision_avoidance: [collvoid_local_planner, pacman_controller, collvoid_controller,
  collvoid_msgs, collvoid_stage, collvoid_simple_global_planner, collvoid_turtlebot,
  pacman_turtles, collvoid_pr2]
multimaster: [multimaster]
multimaster_experimental: [rosproxy, app_manager_android, foreign_relay, app_manager_tutorial,
  pyqrnative, app_manager]
navigation: [move_base, map_server, clear_costmap_recovery, costmap_2d, dwa_local_planner,
  carrot_planner, navfn, voxel_grid, rotate_recovery, nav_core, fake_localization,
  move_base_msgs, move_slow_and_clear, amcl, base_local_planner, robot_pose_ekf]
navigation_experimental: [pose_base_controller, goal_passer, assisted_teleop, eband_local_planner,
  pose_follower, twist_recovery, sbpl_lattice_planner, sbpl_recovery]
navigation_tutorials: [roomba_stage, navigation_stage, odometry_publisher_tutorial,
  point_cloud_publisher_tutorial, robot_setup_tf_tutorial, laser_scan_publisher_tutorial,
  simple_navigation_goals_tutorial]
nodelet_core: [nodelet_topic_tools, nodelet, test_nodelet]
occupancy_grid_utils: [occupancy_grid_utils]
openni_camera: [openni_camera]
openni_kinect: [openni_camera_deprecated, openni, nite]
openni_launch: [openni_launch]
openni_tracker: [openni_tracker]
pluginlib: [pluginlib]
rcommander_core: [rcommander_plain, nodebox_qt, rcommander, tf_broadcast_server]
rcommander_pr2: [pycontroller_manager, tts_server, ptp_arm_action, rcommander_pr2_gui]
robot_model: [urdf_parser, urdf_interface, ivcon, collada_parser, srdf, robot_state_publisher,
  urdf, simmechanics_to_urdf, resource_retriever, collada_urdf, colladadom, convex_decomposition,
  kdl_parser]
robot_model_tutorials: [urdf_tutorial]
robot_model_visualization: [joint_state_publisher]
ros: [rosmake, rosboost_cfg, rosbash, roslib, roscreate, mk, rosbuild, rosclean, rosunit,
  roslang]
ros_comm: [rosconsole, test_roscpp_serialization, rosgraph, test_roscpp_serialization_perf,
  test_ros, test_rostime, roscpp, rosparam, rosout, test_crosspackage, topic_tools,
  rostest, rostopic, test_rospy, roswtf, rosgraph_msgs, roslisp, message_filters,
  perf_roscpp, rosservice, rospy, test_rosbag, test_rosservice, roslaunch, test_roscpp,
  std_srvs, xmlrpcpp, test_roslib_comm, rosmaster, rosmsg, rosnode, rosbag]
ros_tutorials: [turtlesim, rospy_tutorials, roscpp_tutorials]
roscpp_core: [roscpp_traits, cpp_common, rostime, roscpp_serialization]
rosdoc_lite: [rosdoc_lite]
rosh_core: [roshlaunch, rosh]
rosh_robot_plugins: [rosh_common, rosh_geometry, rosh_robot]
rosmatlab: [rosmatlab, rosmatlab_common_msgs, rosrtw_examples, rosrtw]
rospack: [rospack]
rosserial: [rosserial_xbee, rosserial_arduino, rosserial_embeddedlinux, rosserial_python,
  rosserial_msgs, rosserial_client]
rosserial_android: [rosserial_adk_demo, rosserial_adk_demo_msgs, rosserial_android]
rosserial_java: [rosserial_java_node, rosserial_java]
rx: [rxtools, rxbag, xdot, rxgraph, wxPython_swig_interface]
simple_object_capture: [simple_object_capture]
srv_tools: [launch_tools, tf_tools, bag_tools]
std_msgs: [std_msgs]
telekyb_algo: [tk_param_estimator, telekyb_calculus, tk_ctrlalgo]
telekyb_behaviors: [tk_be_common]
telekyb_common: [telekyb_msgs, telekyb_defines, tk_draft_msgs, telekyb_base, telekyb_srvs]
telekyb_deps: [yaml_wrapper, dhd_wrapper, viconsdk_wrapper, armadillo_wrapper, odeint_wrapper,
  eigen3_wrapper, dhd32_wrapper, hidapi_wrapper, vrpn_wrapper]
telekyb_drivers: [telekyb_joystick, telekyb_hid, dhd32_driver, dhd_driver, telekyb_serial,
  tk_smurf_interface]
telekyb_exp: [tk_vrqc2011, tk_exp_rigidity, tk_exp_joystick, tk_mk_tools, tk_exp_smurf]
telekyb_haptics: [tk_haptics_base, tk_haptics_msgs]
telekyb_main: [telekyb_core, tk_trajctrl, tk_exception, tk_state, tk_trajprocessor,
  tk_obstacle, tk_mkinterface, tk_behavior, telekyb_interface]
telekyb_sensors: [telekyb_vrpn, telekyb_vicon]
telekyb_swarm: [tk_formation]
telekyb_utils: [tk_generic_killer, tk_bagtools, tk_handjoystick, tk_conversion]
turtlebot: [turtlebot_driver, pointcloud_to_laserscan, turtlebot_bringup, turtlebot_node,
  turtlebot_description]
turtlebot_apps: [turtlebot_follower, turtlebot_teleop, turtlebot_calibration, turtlebot_navigation,
  turtlebot_sounds, turtlebot_actions]
turtlebot_arm: [turtlebot_kinect_arm_calibration, turtlebot_arm_description, turtlebot_arm_bringup,
  turtlebot_arm_interactive_markers, turtlebot_block_manipulation]
turtlebot_simulator: [turtlebot_gazebo, turtlebot_gazebo_plugins]
turtlebot_viz: [turtlebot_interactive_markers, turtlebot_dashboard]
universal_robot: [ur5_gazebo, ur5_description, ur5_bringup, ur5_driver]
viso2: [libviso2, viso2_ros]
visualization_engine: [test_rve, rve_dynlib, rve_rpc, rve_properties, rve_interface_gen,
  rve_pluginloader, rve_qt, rve_render_client, rve_mesh_loader, rve_transformer, rve_common,
  rve_common_transformers, rve_msgs, rve_geometry, rve_interfaces, rve_render_server]
visualization_experimental: [ogre_tools_qt, rviz_qt]
vrmagic_camera: [vrmagic_multi_driver, vrmagic_devkit_wrapper]
warehousewg: [pymongo, mongo_ros, mongodb]
worldmodel: [worldmodel_ops, semantic_model_web_interface, semanticmodel]
xacro: [xacro]
