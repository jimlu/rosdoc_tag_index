actionlib: [actionlib]
arm_navigation: [move_arm, trajectory_filter_server, joint_normalization_filters,
  kinematics_base, planning_models, mapping_rviz_plugin, spline_smoother, robot_self_filter,
  constraint_aware_spline_smoother, arm_kinematics_constraint_aware, kinematics_msgs,
  collision_map, planning_environment, collision_space, arm_navigation_msgs, geometric_shapes,
  motion_planning_rviz_plugin, ompl_ros_interface]
arm_navigation_experimental: [head_monitor_msgs, collision_proximity_planner, arm_navigation_experimental_tools,
  trajectory_execution_monitor, collider, move_arm_head_monitor, interpolated_ik_motion_planner,
  chomp_motion_planner, distance_field, move_arm_warehouse, collision_proximity, collision_free_arm_trajectory_controller]
assimp: [assimp]
audio_common: [audio_capture, sound_play, audio_play, audio_common_msgs]
bfl: [bfl]
bond_core: [test_bond, smclib, bondpy, bondcpp, bond]
bullet: [bullet]
calibration: [laser_cb_detector, calibration_msgs, calibration_estimation, monocam_settler,
  interval_intersection, joint_states_settler, image_cb_detector, calibration_launch,
  settlerlib]
camera_pose: [camera_pose_calibration, camera_pose_toolkits, kinect_depth_calibration]
catkin: []
common: []
common_msgs: [nav_msgs, shape_msgs, stereo_msgs, actionlib_msgs, trajectory_msgs,
  sensor_msgs, geometry_msgs, visualization_msgs, diagnostic_msgs]
common_rosdeps: [common_rosdeps]
dynamic_reconfigure: [dynamic_reconfigure]
eigen: [eigen]
executive_smach: [smach_ros, smach, smach_msgs]
executive_smach_visualization: [smach_viewer]
filters: [filters]
flirtlib_features: [flirtlib_ros, wg_flirtlib]
gencpp: [gencpp]
genlisp: [genlisp]
genmsg: [genmsg]
genpy: [genpy]
geometry: [tf, angles, tf_conversions, eigen_conversions]
geometry_experimental: [tf2_geometry_msgs, tf2_bullet, tf2_kdl, tf2_tools, test_tf2,
  tf2_ros, tf2_msgs, tf2]
geometry_tutorials: [turtle_tf]
geometry_visualization: [tf2_visualization]
langs: []
megatree: [megatree_cpp, megatree_import, megatree_web, megatree_storage, megatree_core,
  megatree_server]
megatree_pcl: [megatree_pcl]
multi_robot_collision_avoidance: [collvoid_local_planner, collvoid_simple_global_planner,
  collvoid_controller, collvoid_msgs, collvoid_pr2, pacman_controller, collvoid_turtlebot,
  pacman_turtles, collvoid_stage]
multimaster: [multimaster]
multimaster_experimental: [rosproxy, app_manager_android, foreign_relay, app_manager_tutorial,
  pyqrnative, app_manager]
navigation: [move_base, map_server, clear_costmap_recovery, costmap_2d, dwa_local_planner,
  carrot_planner, navfn, voxel_grid, rotate_recovery, nav_core, fake_localization,
  move_base_msgs, move_slow_and_clear, amcl, base_local_planner, robot_pose_ekf]
navigation_experimental: [pose_base_controller, goal_passer, assisted_teleop, eband_local_planner,
  pose_follower, twist_recovery, sbpl_lattice_planner, sbpl_recovery]
navigation_tutorials: [roomba_stage, navigation_stage, odometry_publisher_tutorial,
  point_cloud_publisher_tutorial, robot_setup_tf_tutorial, laser_scan_publisher_tutorial,
  simple_navigation_goals_tutorial]
nodelet_core: [nodelet_topic_tools, nodelet, test_nodelet]
occupancy_grid_utils: [occupancy_grid_utils]
openni_camera: [openni_camera]
openni_kinect: [openni_camera_deprecated, openni, nite]
openni_launch: [openni_launch]
openni_tracker: [openni_tracker]
pluginlib: [pluginlib]
rcommander_core: [rcommander_plain, nodebox_qt, rcommander, tf_broadcast_server]
rcommander_pr2: [pycontroller_manager, tts_server, ptp_arm_action, rcommander_pr2_gui]
robot_model: [urdf_parser, urdf_interface, simmechanics_to_urdf, collada_parser, robot_state_publisher,
  urdf, ivcon, srdf, collada_urdf, colladadom, convex_decomposition, kdl_parser, resource_retriever]
robot_model_tutorials: [urdf_tutorial]
robot_model_visualization: [joint_state_publisher]
ros: [rosmake, rosboost_cfg, rosbash, roslib, roscreate, mk, rosbuild, rosclean, rosunit,
  roslang]
ros_comm: [rosconsole, test_roscpp_serialization, test_ros, perf_roscpp, test_roscpp_serialization_perf,
  test_roslib_comm, test_rostime, roscpp, rosparam, rosout, test_crosspackage, topic_tools,
  rostest, rostopic, test_rospy, roswtf, roslaunch, roslisp, message_filters, rosgraph,
  rosservice, rospy, test_rosbag, test_rosservice, rosgraph_msgs, test_roscpp, std_srvs,
  xmlrpcpp, rosmaster, rosmsg, rosnode, rosbag]
ros_tutorials: [turtlesim, rospy_tutorials, roscpp_tutorials]
roscpp_core: [roscpp_traits, cpp_common, rostime, roscpp_serialization]
rosdoc_lite: [rosdoc_lite]
rosh_core: [roshlaunch, rosh]
rosh_robot_plugins: [rosh_robot, rosh_geometry, rosh_common]
rospack: [rospack]
rosserial_android: [rosserial_android, rosserial_adk_demo_msgs, rosserial_adk_demo]
rosserial_java: [rosserial_java_node, rosserial_java]
rx: [rxtools, xdot, rxbag, rxgraph, wxPython_swig_interface]
simple_object_capture: [simple_object_capture]
std_msgs: [std_msgs]
turtlebot: [turtlebot_node, turtlebot_description, turtlebot_bringup, turtlebot_driver,
  pointcloud_to_laserscan]
turtlebot_simulator: [turtlebot_gazebo, turtlebot_gazebo_plugins]
turtlebot_viz: [turtlebot_interactive_markers, turtlebot_dashboard]
universal_robot: [ur5_gazebo, ur5_description, ur5_bringup, ur5_driver]
visualization_experimental: [ogre_tools_qt, rviz_qt]
warehousewg: [pymongo, mongo_ros, mongodb]
xacro: [xacro]
