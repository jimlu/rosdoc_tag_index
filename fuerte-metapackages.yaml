actionlib: [actionlib]
adept: [ADEPT_VIPER_S650_ikfast_arm_navigation, adept_common, ADEPT_VIPER_S650_arm_navigation]
ar_track_alvar: [ar_track_alvar]
audio_common: [audio_play, audio_common_msgs, sound_play, audio_capture]
bfl: [bfl]
brown_drivers: [irobot_create_2_1]
catkin: []
clearpath_kinect: [clearpath_kinect_demo, clearpath_tools]
cob_extern: [libpcan, libphidgets, libntcan, libmesasr]
common_msgs: [stereo_msgs, actionlib_msgs, visualization_msgs, sensor_msgs, shape_msgs,
  trajectory_msgs, diagnostic_msgs, nav_msgs, geometry_msgs]
common_tutorials: [turtle_actionlib, pluginlib_tutorials, actionlib_tutorials, nodelet_tutorial_math]
control: [control_msgs]
diagnostics_monitors: [runtime_monitor, robot_monitor]
driver_common: [driver_base, timestamp_tools]
ethzasl_xsens_driver: [xsens_driver]
executive_smach_visualization: [smach_viewer]
gencpp: [gencpp]
genlisp: [genlisp]
genmsg: [genmsg]
genpy: [genpy]
geometry: [angles, tf_conversions, tf, eigen_conversions]
geometry_tutorials: [turtle_tf]
geometry_visualization: [tf2_visualization]
gps_umd: [gpsd_client, gps_common]
humanoid_walk: [walk_msgs, halfsteps_pattern_generator, walk_tools, walk_interfaces]
imu_drivers: [microstrain_3dmgx2_imu]
kingfisher: [kingfisher_node, kingfisher_bringup, kingfisher_msgs]
langs: []
laser_pipeline: [laser_geometry, laser_filters, laser_assembler]
megatree_pcl: [megatree_pcl]
nmea_gps_driver: [nmea_gps_driver]
open_street_map: [route_network, test_osm, osm_cartography]
openni_launch: [openni_launch]
openni_tracker: [openni_tracker]
openrtm_cpp: [openrtm_cpp]
pr2_pan_tilt: [pr2_pan_tilt]
rbdl: [rbdl]
robot_model_py: [urdf_parser_py]
robot_model_tutorials: [urdf_tutorial]
robot_pose_publisher: [robot_pose_publisher]
romeo: [romeo_description]
ros: [rosclean, mk, rosmake, roslib, rosbash, rosboost_cfg, roscreate, rosbuild, rosunit,
  roslang]
ros_comm: [rosservice, message_filters, topic_tools, rosparam, test_roscpp_serialization,
  rospy, roslisp, rosgraph, rostopic, std_srvs, roslaunch, test_rosservice, roswtf,
  test_roscpp, rosmaster, test_rospy, test_ros, test_rosbag, rosnode, roscpp, rosconsole,
  rosmsg, test_roscpp_serialization_perf, test_rostime, xmlrpcpp, test_roslib_comm,
  rosbag, rosout, rostest, perf_roscpp, test_crosspackage, rosgraph_msgs]
ros_tutorials: [roscpp_tutorials, rospy_tutorials, turtlesim]
roscpp_core: [cpp_common, roscpp_traits, rostime, roscpp_serialization]
rosh_desktop_plugins: [rosh_visualization, rosh_desktop]
rosh_robot_plugins: [rosh_geometry, rosh_robot, rosh_common]
rospack: [rospack]
rx: [xdot, wxPython_swig_interface, rxbag, rxgraph, rxtools]
serial_communication: [cereal_port]
slam_gmapping: [gmapping]
sql_database: [student_database, database_interface]
srs_common: [srs_object_database_msgs]
std_msgs: [std_msgs]
unique_identifier: [uuid_msgs, unique_id]
wg_pr2_apps: [wg_pr2_2dnav]
wge100_driver: [wge100_camera_firmware, wge100_camera]
